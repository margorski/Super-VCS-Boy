; section SetHorizPos
SetHorizPos
	; inlined wsync
    STA     WSYNC
	; end of inlined wsync
;  	wsync 
;  	*3 c+ {	a-15 } >=
    NOP     $80
    SEc
__label_3
    SBC     #$0F
    BCS     __label_3
;  	a^0x07 a<< a<< a<< a<<
    EOR     #$07
    ASL
    ASL
    ASL
    ASL
;  	rp0,x=a hp0,x=a
    STA     rp0,X
    STA     hp0,X
;  }
;  
    RTS
; section hero
hero
    .byte     #$00
;  	0
;  	0
;  	image hero2 0 7 8> 8^
    .byte     #$00
    .byte   #$66
    .byte   #$FF
    .byte   #$F3
    .byte   #$E1
    .byte   #$FF
    .byte   #$8C
    .byte   #$CD
    .byte   #$FF
;  }
;  
; section pf1_0
pf1_0
;  	align 256
;  	image test 4 47 8> 48^	
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$10
    .byte   #$10
    .byte   #$10
    .byte   #$10
    .byte   #$10
    .byte   #$10
    .byte   #$10
    .byte   #$10
    .byte   #$10
    .byte   #$10
    .byte   #$10
    .byte   #$10
    .byte   #$10
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$0F
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$FF
    .byte   #$00
;  }
;  
; section pf2_0
pf2_0
;  	align 256
;  	image test 19 47 8< 48^	
    .byte   #$10
    .byte   #$10
    .byte   #$10
    .byte   #$10
    .byte   #$10
    .byte   #$10
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$80
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$FF
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$FF
    .byte   #$00
;  }
;  
; section pf1_1
pf1_1
;  	align 256
;  	image test 20 47 8> 48^	
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$FF
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$FF
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$FF
    .byte   #$00
;  }
;  
; section pf2_1
pf2_1
;  	align 256
;  	image test 35 47 8< 48^	
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$FF
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$01
    .byte   #$01
    .byte   #$01
    .byte   #$01
    .byte   #$01
    .byte   #$01
    .byte   #$01
    .byte   #$01
    .byte   #$01
    .byte   #$01
    .byte   #$01
    .byte   #$01
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$00
    .byte   #$FF
    .byte   #$00
;  }
; section main
main
	; inlined init
    SEi
    CLd
    LDX     #$FF
    TXS
    LDA     #$00
__I17__label_1
    STA     zeropage,X
    DEX
	BNE	__I17__label_1
	; end of inlined init
;  	init
;  	Data0:
Data0
;  		PFPtr=a=&<Data0 			PFPtr+1=a=&>Data0
    LDA     #<(Data0)
    STA     PFPtr
    LDA     #>(Data0)
    STA     PFPtr+1
;  		SpritePtr0=a=&<hero 		SpritePtr0+1=a=&>hero
    LDA     #<(hero)
    STA     SpritePtr0
    LDA     #>(hero)
    STA     SpritePtr0+1
;  		SpritePtr1=a=&<hero			SpritePtr1+1=a=&>hero
    LDA     #<(hero)
    STA     SpritePtr1
    LDA     #>(hero)
    STA     SpritePtr1+1
;  		YPos0=a=180	YPos1=a=200		XPos0=XPos1=a=38
    LDA     #$B4
    STA     YPos0
    LDA     #$C8
    STA     YPos1
    LDA     #$26
    STA     XPos1
    STA     XPos0
;  		ctpf=a=0x01
    LDA     #$01
    STA     ctpf
;  		PF0=a=0xF0
    LDA     #$F0
    STA     PF0
;  		EnableSpritesAndPlayfield
;  	{
	; inlined EnableSpritesAndPlayfield
    LDA     #$33
    STA     cp0
    LDA     #$88
    STA     cp1
    LDA     #$56
    STA     cpf
	; end of inlined EnableSpritesAndPlayfield
;  		sync1
__label_38
;  			PFIndex=a=48 YP0=a=YPos0 YP1=a=YPos1 tmpGP0=a=0 
	; inlined sync1
__I19__I1__label_2
    LDA     INTIM
	BNE	__I19__I1__label_2
    STA     WSYNC
    LDA     #$02
    STA     VBLANK
    LDA     #$21
    STA     TIM64T
	; end of inlined sync1
    LDA     #$30
    STA     PFIndex
    LDA     YPos0
    STA     YP0
    LDA     YPos1
    STA     YP1
    LDA     #$00
    STA     tmpGP0
;  			
;  			// 
;  			x=xspeed
    LDX     xspeed
;  			a&?swcha
    BIT     swcha
;  			>>= {
    BVS     __label_39
;  				// left 
;  				a&?xspeed >=0 { x=0 }
    BIT     xspeed
    BMI     __label_40
    LDX     #$00
;  				x--
__label_40
    DEX
;  			} 
    JMP     __label_41
__label_39
;  			else {
;  				>=0 { 
    BMI     __label_42
;  					// right
;  					a&?xspeed <0 { x=0 }
    BIT     xspeed
    BPL     __label_43
    LDX     #$00
;  					x++
__label_43
    INX
;  				}
;  				else { x=0 }
    JMP     __label_44
__label_42
    LDX     #$00
;  			}
__label_44
;  			xspeed=x
__label_41
    STX     xspeed
;  			a&?xspeed >=0
    BIT     xspeed
;  			{
    BMI     __label_45
;  				a=xspeed a>> a>> c- a+XPos0 a?152 >= { a=152 } XPos0=a
    LDA     xspeed
    LSR
    LSR
    CLc
    ADC     XPos0
    CMP     #$98
    BCC     __label_46
    LDA     #$98
__label_46
    STA     XPos0
;  			} else {
    JMP     __label_47
__label_45
;  				a=xspeed a^0xff c- a+1 a>> a>> Temp=a c+ a=XPos0 a-Temp <{ a=0 } XPos0=a
    LDA     xspeed
    EOR     #$FF
    CLc
    ADC     #$01
    LSR
    LSR
    STA     Temp
    SEc
    LDA     XPos0
    SBC     Temp
    BCS     __label_48
    LDA     #$00
__label_48
    STA     XPos0
;  			}
;  			
__label_47
;  		sync2
;  			a=XPos0 x=0 SetHorizPos
	; inlined sync2
__I20__I3__label_2
    LDA     INTIM
	BNE	__I20__I3__label_2
    STA     WSYNC
    LDA     #$02
    STA     VSYNC
    STA     WSYNC
    STA     WSYNC
    LDA     #$00
    STA     WSYNC
    STA     VSYNC
    LDA     #$2C
    STA     TIM64T
	; end of inlined sync2
    LDA     XPos0
    LDX     #$00
;  			a=XPos1 x=1 SetHorizPos			
    JSR     SetHorizPos
    LDA     XPos1
    LDX     #$01
    JSR     SetHorizPos
;  			wsync hmove=a
	; inlined wsync
    STA     WSYNC
	; end of inlined wsync
    STA     hmove
;  		sync3
;  			// 2/4 lines kernel, async playfield 4 lines, sprite0 2lines
	; inlined sync3
__I22__I8__label_2
    LDA     INTIM
	BNE	__I22__I8__label_2
    STA     WSYNC
    LDA     #$00
    STA     VBLANK
    LDA     #$E7
    STA     TIM64T
	; end of inlined sync3
;  			{
;  				wsync
__label_49
;  				y=PFIndex == { goto .NextFrame } y--
	; inlined wsync
    STA     WSYNC
	; end of inlined wsync
    LDY     PFIndex
    BNE     __label_50
    JMP     __local28_NextFrame
__label_50
    DEY
;  				gp0=a=tmpGP0
    LDA     tmpGP0
    STA     gp0
;  				PF1=a=pf1_0,y
    LDA     pf1_0,Y
    STA     PF1
;  				PF2=tmpPF2=a=pf2_0,y
    LDA     pf2_0,Y
    STA     tmpPF2
    STA     PF2
;  				PF2=tmpPF5=a=pf1_1,y
    LDA     pf1_1,Y
    STA     tmpPF5
    STA     PF2
;  				PF1=tmpPF4=a=pf2_1,y
    LDA     pf2_1,Y
    STA     tmpPF4
    STA     PF1
;  				tmpPF1=a=pf1_0,y
    LDA     pf1_0,Y
    STA     tmpPF1
;  				PFIndex=y
    STY     PFIndex
;  
;  				wsync
;  				PF1=a=tmpPF1
	; inlined wsync
    STA     WSYNC
	; end of inlined wsync
    LDA     tmpPF1
    STA     PF1
;  				PF2=a=tmpPF2
    LDA     tmpPF2
    STA     PF2
;  				// PLENTY OF TIME HERE
;  				*24
    NOP
    NOP
    NOP
    NOP
    NOP
    NOP
    NOP
    NOP
    NOP
    NOP
    NOP
    NOP
;  				PF2=a=tmpPF5
    LDA     tmpPF5
    STA     PF2
;  				PF1=a=tmpPF4
    LDA     tmpPF4
    STA     PF1
;  				
;  				wsync
;  				a=SPRITE_HEIGHT c+ a - ++YP0 < { a=0 } y=a
	; inlined wsync
    STA     WSYNC
	; end of inlined wsync
    LDA     #$0A
    SEc
    ISC     YP0
    BCS     __label_51
    LDA     #$00
__label_51
    TAY
;  				PF1=a=tmpPF1
    LDA     tmpPF1
    STA     PF1
;  				PF2=a=tmpPF2
    LDA     tmpPF2
    STA     PF2
;  				gp0=a=(SpritePtr0),y 
    LDA     (SpritePtr0),Y
    STA     gp0
;  				PF2=a=tmpPF5
    LDA     tmpPF5
    STA     PF2
;  				PF1=a=tmpPF4					
    LDA     tmpPF4
    STA     PF1
;  				y-- tmpGP0=a=(SpritePtr0),y 
    DEY
    LDA     (SpritePtr0),Y
    STA     tmpGP0
;  				
;  				wsync
;  				PF1=a=tmpPF1
	; inlined wsync
    STA     WSYNC
	; end of inlined wsync
    LDA     tmpPF1
    STA     PF1
;  				PF2=a=tmpPF2
    LDA     tmpPF2
    STA     PF2
;  				// PLENTY OF TIME HERE
;  				*24
    NOP
    NOP
    NOP
    NOP
    NOP
    NOP
    NOP
    NOP
    NOP
    NOP
    NOP
    NOP
;  				PF2=a=tmpPF5
    LDA     tmpPF5
    STA     PF2
;  				PF1=a=tmpPF4
    LDA     tmpPF4
    STA     PF1
;  				YP0++
    INC     YP0
;  			} always
    JMP     __label_49
;  		.NextFrame:
__local28_NextFrame
;  	} always
    JMP     __label_38
;  }
; section __vectors
    NOP
    NOP
    NOP
    NOP
    NOP
    NOP
    NOP
    NOP
    NOP
; section __entry
__entry
    BIT     __banksel_core
    JMP     main
